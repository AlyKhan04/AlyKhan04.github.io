{"version":3,"file":"static/js/51.e5fee784.chunk.js","mappings":"8JAkBe,SAASA,IACtB,MAAMC,EAAM,IACNC,EAAS,GACTC,EAAS,GAAAC,OAAMC,GAAsB,0BAErCC,EApBR,WACE,MAAOA,EAAIC,IAASC,EAAAA,EAAAA,UAAS,IAAyB,qBAAXC,OAAyBA,OAAOH,QAAKI,GAWhF,OAVAC,EAAAA,EAAAA,WAAU,KACR,GAAIL,EAAI,OACR,MAAMM,EAAIC,SAASC,cAAc,UAMjC,OALAF,EAAEG,IAAM,sEACRH,EAAEI,OAAQ,EACVJ,EAAEK,OAAS,IAAMV,EAAME,OAAOH,IAC9BM,EAAEM,QAAU,IAAMC,QAAQC,MAAM,gCAChCP,SAASQ,KAAKC,YAAYV,GACnB,IAAMC,SAASQ,KAAKE,YAAYX,IACtC,CAACN,IACGA,CACT,CAOakB,GACLC,GAAYC,EAAAA,EAAAA,QAAO,MACnBC,GAAaD,EAAAA,EAAAA,SAAO,IAEnBE,EAAOC,IAAYrB,EAAAA,EAAAA,UAAS,KAC5BsB,EAAMC,IAAWvB,EAAAA,EAAAA,UAAS,SAC1BwB,EAAOC,IAAYzB,EAAAA,EAAAA,UAAS,OAC5B0B,EAASC,IAAc3B,EAAAA,EAAAA,WAAS,IAChC4B,EAAWC,IAAgB7B,EAAAA,EAAAA,UAAS,KACpC8B,EAAMC,IAAW/B,EAAAA,EAAAA,UAAS,IAE3BgC,GAASC,EAAAA,EAAAA,SAAQ,IAAMC,MAAMC,KAAK,CAAEC,OAAQ,IAAM,CAACC,EAAGC,IAAMC,OAAOC,aAAa,GAAKF,IAAK,KAEhGnC,EAAAA,EAAAA,WAAU,KAAQE,SAASoC,MAAQ,2CAAyC,KAG5EtC,EAAAA,EAAAA,WAAU,KACR,MAAMuC,EAAIzB,EAAU0B,QACpB,IAAKD,EAAG,OACR,MAAME,EAAMC,KAAKC,IAAI,EAAG7C,OAAO8C,kBAAoB,GACnDL,EAAEM,MAAQH,KAAKI,MAAMxD,EAAMmD,GAC3BF,EAAEQ,OAASL,KAAKI,MAAMxD,EAAMmD,GAC5BF,EAAES,MAAMH,MAAK,GAAApD,OAAMH,EAAG,MACtBiD,EAAES,MAAMD,OAAM,GAAAtD,OAAMH,EAAG,MAEvB,MAAM2D,EAAMV,EAAEW,WAAW,MACzBD,EAAIE,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GAChCF,EAAIG,MAAMX,EAAKA,GACfQ,EAAII,UAAY,QAChBJ,EAAIK,SAAS,EAAG,EAAGhE,EAAKA,GACxB2D,EAAIM,QAAU,QACdN,EAAIO,SAAW,SACd,KAGHxD,EAAAA,EAAAA,WAAU,KACR,IAAIyD,GAAU,EAgBd,MAfA,WACE,GAAK9D,EACL,IACMA,EAAG+D,aAAa/D,EAAG+D,QACvB,MAAMC,QAAUhE,EAAGiE,gBAAgBpE,GACnC,IAAKiE,EAAS,OACdnC,EAASqC,GACTjC,EAAa,GACf,CAAE,MAAOmC,GACPrD,QAAQC,MAAM,qBAAsBoD,GAChCJ,GAAS/B,EAAaU,QAAQ,OAADyB,QAAC,IAADA,OAAC,EAADA,EAAGC,UAAWD,GACjD,CAAC,QACKJ,GAASjC,GAAW,EAC1B,CACD,EAdD,GAeO,KAAQiC,GAAU,IACxB,CAAC9D,IAGJ,MAAMoE,EAAUF,IAAO,IAADG,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACpB,MAAMC,EAAIxD,EAAU0B,QAAQ+B,wBAG5B,MAAO,CAAEC,GAFyB,QAAxBR,EAAU,QAAVC,EAACJ,EAAEY,eAAO,IAAAR,GAAK,QAALC,EAATD,EAAY,UAAE,IAAAC,OAAL,EAATA,EAAgBQ,eAAO,IAAAV,EAAAA,EAAIH,EAAEa,SAAWJ,EAAEK,KAEzCC,GADsB,QAAxBT,EAAU,QAAVC,EAACP,EAAEY,eAAO,IAAAL,GAAK,QAALC,EAATD,EAAY,UAAE,IAAAC,OAAL,EAATA,EAAgBQ,eAAO,IAAAV,EAAAA,EAAIN,EAAEgB,SAAWP,EAAEQ,MAmBjDC,EAAUlB,IAAQA,EAAEmB,iBAAkB,MAAM,EAAER,EAAC,EAAEI,GAAMb,EAAOF,GAhBtDoB,EAACT,EAAGI,KAChB,MAAM3B,EAAMnC,EAAU0B,QAAQU,WAAW,MACzClC,EAAWwB,SAAU,EACrBS,EAAIiC,YAAuB,SAAT/D,EAAkB,QAAU,QAC9C8B,EAAIkC,UAAYlE,EAChBgC,EAAImC,YACJnC,EAAIoC,OAAOb,EAAGI,IAUwDK,CAAMT,EAAGI,IAC3EU,EAAUzB,IAAQ,IAAK7C,EAAWwB,QAAS,OAAQqB,EAAEmB,iBAAkB,MAAM,EAAER,EAAC,EAAEI,GAAMb,EAAOF,GATxF0B,EAACf,EAAGI,KACf,IAAK5D,EAAWwB,QAAS,OACzB,MAAMS,EAAMnC,EAAU0B,QAAQU,WAAW,MACzCD,EAAIuC,OAAOhB,EAAGI,GACd3B,EAAIwC,UAKmGF,CAAKf,EAAGI,IAC3Gc,EAAU7B,IAAO,IAAD8B,EAAG,OAAD9B,QAAC,IAADA,GAAiB,QAAhB8B,EAAD9B,EAAGmB,sBAAc,IAAAW,GAAjBA,EAAAC,KAAA/B,GAJJ7C,EAAWwB,SAAU,GA6CnCkB,IAAUrC,IAAUE,IAAYE,EAEtC,OACEoE,EAAAA,EAAAA,KAAA,WAASC,UAAU,oEAAmEC,UACpFC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oBAAmBC,SAAA,EAChCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,+CAA8CC,SAAA,EAC3DC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,kCAAiCC,SAAC,gBAC/CF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,yBAAwBC,SAAC,uCACvCF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,6BAA4BC,SAAC,kEAE5CF,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACC,GAAG,cAAcJ,UAAU,0CAAyCC,SAAC,yBAG7EC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,wCAAuCC,SAAA,EAEpDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,8EAA6EC,SAAA,EAC1FC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yCAAwCC,SAAA,EACrDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gBAAeC,SAAC,YAC9BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kCAAiCC,SAAA,EAC9CC,EAAAA,EAAAA,MAAA,QAAMF,UAAS,qBAAArG,OAAuBiE,EAAQ,kBAAoBjC,EAAY,gBAAkB,eAAgBsE,SAAA,CAAC,UACvGtE,EAAY,SAAWF,EAAU,gBAAa,YAExDyE,EAAAA,EAAAA,MAAA,SAAOF,UAAU,0BAAyBC,SAAA,CAAC,SAEzCF,EAAAA,EAAAA,KAAA,SAAOM,KAAK,QAAQC,IAAI,IAAIzD,IAAI,KAAK0D,MAAOpF,EAAOqF,SAAWzC,GAAM3C,EAASqF,SAAS1C,EAAE2C,OAAOH,MAAO,WAExGL,EAAAA,EAAAA,MAAA,SAAOF,UAAU,0BAAyBC,SAAA,CAAC,QAEzCC,EAAAA,EAAAA,MAAA,UAAQK,MAAOlF,EAAMmF,SAAWzC,GAAMzC,EAAQyC,EAAE2C,OAAOH,OAAQP,UAAU,gCAA+BC,SAAA,EACtGF,EAAAA,EAAAA,KAAA,UAAQQ,MAAM,OAAMN,SAAC,UACrBF,EAAAA,EAAAA,KAAA,UAAQQ,MAAM,QAAON,SAAC,iBAG1BF,EAAAA,EAAAA,KAAA,UAAQY,QAzEFC,KAClB,MAAMzD,EAAMnC,EAAU0B,QAAQU,WAAW,MACzCD,EAAII,UAAY,QAChBJ,EAAIK,SAAS,EAAG,EAAGhE,EAAKA,GACxBsC,EAAQ,KAqEkCkE,UAAU,kDAAiDC,SAAC,WAC1FF,EAAAA,EAAAA,KAAA,UAAQY,QAlENpG,UAAa,IAADsG,EAAAC,EAAAC,EAC1B,IAAKlH,IAAO0B,EAAO,OACnB,MAAMjB,EAAMU,EAAU0B,QAChBsE,EAAM5G,SAASC,cAAc,UACnC2G,EAAIjE,MAAQtD,EAAQuH,EAAI/D,OAASxD,EACjC,MAAMwH,EAAOD,EAAI5D,WAAW,KAAM,CAAE8D,oBAAoB,IACxDD,EAAKE,uBAAwB,EAC7BF,EAAK1D,UAAY,QACjB0D,EAAKzD,SAAS,EAAG,EAAG/D,EAAQA,GAC5BwH,EAAKG,UAAU9G,EAAK,EAAG,EAAGA,EAAIyC,MAAOzC,EAAI2C,OAAQ,EAAG,EAAGxD,EAAQA,GAE/D,MAAM,KAAE4H,GAASJ,EAAKK,aAAa,EAAG,EAAG7H,EAAQA,GAC3C8H,EAAO,IAAIC,aAAa/H,KAC9B,IAAK,IAAI4C,EAAI,EAAGoF,EAAI,EAAGpF,EAAIgF,EAAKlF,OAAQE,GAAK,EAAGoF,IAAK,CACnD,MAAMC,GAAKL,EAAKhF,GAAKgF,EAAKhF,EAAE,GAAKgF,EAAKhF,EAAE,IAAE,IAC1CkF,EAAKE,GAAK,EAAIC,CAChB,CAEA,MAAMC,EAAQ9H,EAAG+H,SAASL,EAAM,CAAC,EAAG9H,EAAQA,EAAQ,IAC9CoI,EAAStG,EAAMuG,QAAQH,GACvBI,EAAQF,EAAOG,QAAUH,EAAOG,UAAYnI,EAAGmI,QAAQH,GACvDI,QAAeF,EAAMV,OAE3BM,EAAMO,UACQ,QAAdrB,EAAAgB,EAAOK,eAAO,IAAArB,GAAdA,EAAAf,KAAA+B,GACa,QAAbf,EAAAiB,EAAMG,eAAO,IAAApB,GAAbA,EAAAhB,KAAAiC,GAEA,MAAMI,EAAMF,EAAOG,QAAQxF,KAAKC,OAAOoF,IACvCnG,EAAmB,QAAZiF,EAAChF,EAAOoG,UAAI,IAAApB,EAAAA,EAAA,IAAApH,OAAQwI,KAsCWE,UAAWzE,EAAOoC,UAAU,iFAAgFC,SAAC,mBAM3IF,EAAAA,EAAAA,KAAA,OACEC,UAAU,iFACV9C,MAAO,CAAEH,MAAOvD,EAAKyD,OAAQzD,EAAK8I,YAAa,QAC/CC,YAAatD,EACbuD,YAAahD,EACbiD,UAAW7C,EACX8C,aAAc9C,EACd+C,aAAc1D,EACd2D,YAAapD,EACbqD,WAAYjD,EAAKK,UAEjBF,EAAAA,EAAAA,KAAA,UAAQ+C,IAAK9H,OAGb4C,GAASjC,IACTuE,EAAAA,EAAAA,MAAA,KAAGF,UAAU,sCAAqCC,SAAA,CAAC,eACpCtE,GAAUoE,EAAAA,EAAAA,KAAA,SAAM,iBAChBA,EAAAA,EAAAA,KAAA,QAAAE,SAAOvG,WAM1BwG,EAAAA,EAAAA,MAAA,OAAKF,UAAU,8EAA6EC,SAAA,EAC1FF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qBAAoBC,SAAC,gBACnCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oCAAmCC,SAAEpE,GAAQ,qBAMxE,C","sources":["pages/playground/HandwritingDemo.jsx"],"sourcesContent":["import React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction useTf() {\n  const [tf, setTf] = useState(() => (typeof window !== \"undefined\" ? window.tf : undefined));\n  useEffect(() => {\n    if (tf) return;\n    const s = document.createElement(\"script\");\n    s.src = \"https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@4.20.0/dist/tf.min.js\";\n    s.async = true;\n    s.onload = () => setTf(window.tf);\n    s.onerror = () => console.error(\"Failed to load TensorFlow.js\");\n    document.head.appendChild(s);\n    return () => document.head.removeChild(s);\n  }, [tf]);\n  return tf;\n}\n\nexport default function HandwritingDemo() {\n  const CSS = 280;        // display size (like the notebook)\n  const TARGET = 28;      // model input size\n  const MODEL_URL = `${process.env.PUBLIC_URL}/models/hcr/model.json`; // served from public/\n\n  const tf = useTf();\n  const canvasRef = useRef(null);\n  const drawingRef = useRef(false);\n\n  const [brush, setBrush] = useState(16);\n  const [mode, setMode] = useState(\"draw\"); // draw | erase\n  const [model, setModel] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [loadError, setLoadError] = useState(\"\");\n  const [pred, setPred] = useState(\"\");\n\n  const labels = useMemo(() => Array.from({ length: 26 }, (_, i) => String.fromCharCode(65 + i)), []);\n\n  useEffect(() => { document.title = \"Handwriting Demo — Aly's Portfolio\"; }, []);\n\n  // 280×280 canvas with device-pixel-ratio scaling (no dead zones)\n  useEffect(() => {\n    const c = canvasRef.current;\n    if (!c) return;\n    const dpr = Math.max(1, window.devicePixelRatio || 1);\n    c.width = Math.round(CSS * dpr);\n    c.height = Math.round(CSS * dpr);\n    c.style.width = `${CSS}px`;\n    c.style.height = `${CSS}px`;\n\n    const ctx = c.getContext(\"2d\");\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.scale(dpr, dpr); // draw using CSS pixels\n    ctx.fillStyle = \"white\";\n    ctx.fillRect(0, 0, CSS, CSS);\n    ctx.lineCap = \"round\";\n    ctx.lineJoin = \"round\";\n  }, []);\n\n  // Load the model from your exact path\n  useEffect(() => {\n    let mounted = true;\n    (async () => {\n      if (!tf) return;\n      try {\n        if (tf.ready) await tf.ready();\n        const m = await tf.loadLayersModel(MODEL_URL);\n        if (!mounted) return;\n        setModel(m);\n        setLoadError(\"\");\n      } catch (e) {\n        console.error(\"Model load failed:\", e);\n        if (mounted) setLoadError(String(e?.message || e));\n      } finally {\n        if (mounted) setLoading(false);\n      }\n    })();\n    return () => { mounted = false; };\n  }, [tf]);\n\n  // Pointer drawing\n  const getPos = (e) => {\n    const r = canvasRef.current.getBoundingClientRect();\n    const x = (e.touches?.[0]?.clientX ?? e.clientX) - r.left;\n    const y = (e.touches?.[0]?.clientY ?? e.clientY) - r.top;\n    return { x, y };\n  };\n  const start = (x, y) => {\n    const ctx = canvasRef.current.getContext(\"2d\");\n    drawingRef.current = true;\n    ctx.strokeStyle = mode === \"draw\" ? \"black\" : \"white\";\n    ctx.lineWidth = brush;\n    ctx.beginPath();\n    ctx.moveTo(x, y);\n  };\n  const move = (x, y) => {\n    if (!drawingRef.current) return;\n    const ctx = canvasRef.current.getContext(\"2d\");\n    ctx.lineTo(x, y);\n    ctx.stroke();\n  };\n  const end = () => { drawingRef.current = false; };\n\n  const onDown = (e) => { e.preventDefault(); const { x, y } = getPos(e); start(x, y); };\n  const onMove = (e) => { if (!drawingRef.current) return; e.preventDefault(); const { x, y } = getPos(e); move(x, y); };\n  const onUp   = (e) => { e?.preventDefault?.(); end(); };\n\n  const clearCanvas = () => {\n    const ctx = canvasRef.current.getContext(\"2d\");\n    ctx.fillStyle = \"white\";\n    ctx.fillRect(0, 0, CSS, CSS);\n    setPred(\"\");\n  };\n\n  // Downscale to 28×28 and predict top class\n  const predict = async () => {\n    if (!tf || !model) return;\n    const src = canvasRef.current;\n    const off = document.createElement(\"canvas\");\n    off.width = TARGET; off.height = TARGET;\n    const octx = off.getContext(\"2d\", { willReadFrequently: true });\n    octx.imageSmoothingEnabled = true; // nice downscale\n    octx.fillStyle = \"white\";\n    octx.fillRect(0, 0, TARGET, TARGET);\n    octx.drawImage(src, 0, 0, src.width, src.height, 0, 0, TARGET, TARGET);\n\n    const { data } = octx.getImageData(0, 0, TARGET, TARGET);\n    const gray = new Float32Array(TARGET * TARGET);\n    for (let i = 0, j = 0; i < data.length; i += 4, j++) {\n      const v = (data[i] + data[i+1] + data[i+2]) / (3 * 255); // white=1\n      gray[j] = 1 - v; // invert so ink=1\n    }\n\n    const input = tf.tensor4d(gray, [1, TARGET, TARGET, 1]);\n    const logits = model.predict(input);\n    const probs = logits.softmax ? logits.softmax() : tf.softmax(logits);\n    const values = await probs.data();\n\n    input.dispose();\n    logits.dispose?.();\n    probs.dispose?.();\n\n    const idx = values.indexOf(Math.max(...values));\n    setPred(labels[idx] ?? `#${idx}`);\n  };\n\n  const ready = !!model && !loading && !loadError;\n\n  return (\n    <section className=\"relative z-10 text-white py-16 px-4 sm:px-8 lg:px-16 min-h-screen\">\n      <div className=\"max-w-7xl mx-auto\">\n        <div className=\"mb-6 flex items-center justify-between gap-4\">\n          <div>\n            <p className=\"text-xs uppercase text-gray-400\">playground</p>\n            <h2 className=\"text-2xl font-semibold\">Handwritten Character Recognition</h2>\n            <p className=\"text-gray-400 text-sm mt-1\">Draw at 280×280; we convert to 28×28 for the model.</p>\n          </div>\n          <Link to=\"/playground\" className=\"text-sm text-orange-400 hover:underline\">← All demos</Link>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          {/* Canvas card */}\n          <div className=\"p-5 rounded-xl border border-white/10 bg-white/5 backdrop-blur-md shadow-lg\">\n            <div className=\"flex items-center justify-between mb-3\">\n              <h3 className=\"font-semibold\">Canvas</h3>\n              <div className=\"flex items-center gap-3 text-sm\">\n                <span className={`px-2 py-1 rounded ${ready ? \"bg-green-500/30\" : loadError ? \"bg-red-500/30\" : \"bg-white/10\"}`}>\n                  Model: {loadError ? \"Failed\" : loading ? \"Loading…\" : \"Ready\"}\n                </span>\n                <label className=\"flex items-center gap-2\">\n                  Brush\n                  <input type=\"range\" min=\"6\" max=\"36\" value={brush} onChange={(e) => setBrush(parseInt(e.target.value, 10))} />\n                </label>\n                <label className=\"flex items-center gap-2\">\n                  Mode\n                  <select value={mode} onChange={(e) => setMode(e.target.value)} className=\"bg-white/10 rounded px-2 py-1\">\n                    <option value=\"draw\">Draw</option>\n                    <option value=\"erase\">Erase</option>\n                  </select>\n                </label>\n                <button onClick={clearCanvas} className=\"px-3 py-1 rounded bg-white/10 hover:bg-white/20\">Clear</button>\n                <button onClick={predict} disabled={!ready} className=\"px-3 py-1 rounded bg-orange-500/90 hover:bg-orange-500/100 disabled:opacity-50\">\n                  Predict\n                </button>\n              </div>\n            </div>\n\n            <div\n              className=\"rounded-lg overflow-hidden border border-white/10 bg-white mx-auto select-none\"\n              style={{ width: CSS, height: CSS, touchAction: \"none\" }}\n              onMouseDown={onDown}\n              onMouseMove={onMove}\n              onMouseUp={onUp}\n              onMouseLeave={onUp}\n              onTouchStart={onDown}\n              onTouchMove={onMove}\n              onTouchEnd={onUp}\n            >\n              <canvas ref={canvasRef} />\n            </div>\n\n            {!ready && loadError && (\n              <p className=\"mt-3 text-xs text-red-300 break-all\">\n                Load error: {loadError}<br />\n                Expected at: <code>{MODEL_URL}</code>\n              </p>\n            )}\n          </div>\n\n          {/* Result card */}\n          <div className=\"p-5 rounded-xl border border-white/10 bg-white/5 backdrop-blur-md shadow-lg\">\n            <h3 className=\"font-semibold mb-3\">Prediction</h3>\n            <div className=\"text-5xl font-bold tracking-wider\">{pred || \"—\"}</div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n"],"names":["HandwritingDemo","CSS","TARGET","MODEL_URL","concat","process","tf","setTf","useState","window","undefined","useEffect","s","document","createElement","src","async","onload","onerror","console","error","head","appendChild","removeChild","useTf","canvasRef","useRef","drawingRef","brush","setBrush","mode","setMode","model","setModel","loading","setLoading","loadError","setLoadError","pred","setPred","labels","useMemo","Array","from","length","_","i","String","fromCharCode","title","c","current","dpr","Math","max","devicePixelRatio","width","round","height","style","ctx","getContext","setTransform","scale","fillStyle","fillRect","lineCap","lineJoin","mounted","ready","m","loadLayersModel","e","message","getPos","_e$touches$0$clientX","_e$touches","_e$touches$","_e$touches$0$clientY","_e$touches2","_e$touches2$","r","getBoundingClientRect","x","touches","clientX","left","y","clientY","top","onDown","preventDefault","start","strokeStyle","lineWidth","beginPath","moveTo","onMove","move","lineTo","stroke","onUp","_e$preventDefault","call","_jsx","className","children","_jsxs","Link","to","type","min","value","onChange","parseInt","target","onClick","clearCanvas","_logits$dispose","_probs$dispose","_labels$idx","off","octx","willReadFrequently","imageSmoothingEnabled","drawImage","data","getImageData","gray","Float32Array","j","v","input","tensor4d","logits","predict","probs","softmax","values","dispose","idx","indexOf","disabled","touchAction","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","onTouchStart","onTouchMove","onTouchEnd","ref"],"sourceRoot":""}